1. 注册github
2. 生成密钥ssh-keygen -t rsa -C "your_email@email.com"
3. 打开生成的id_rsa.pub, 复制密钥添加到github SSH key中
4. 测试是否成功ssh -T git@github.com, 最后出现：You've successfully authenticated, but GitHub does not provide shell access说明已经成功连上github
5. 设置name和email，git config --global user.name "your name", git config --global user.email "email@email.com"
6. 添加远程库git remote add origin git@github.com:yourName/yourRepo.git
7. 创建本地目录，进入目录，克隆仓库git clone https://github.com/xxx/xx.git
8. 进入克隆仓库目录
9. 加入文件
10. git add test.txt
11. git commit -m "xxx"
12. git push origin master

注意
warning: LF will be replaced by CRLF in rules/daily.txt.
The file will have its original line endings in your working directory.
出现此问题是因为不同操作系统的使用的换行符不同
git config core.autocrlf
为true时，Git会将你add的所有文件视为文本问价你，将结尾的CRLF转换为LF，而checkout时会再将文件的LF格式转为CRLF格式。
为false时，line endings不做任何改变，文本文件保持其原来的样子。
为input时，add时Git会把CRLF转换为LF，而check时仍旧为LF，所以Windows操作系统不建议设置此值。
git config --global core.autocrlf false

设置多个git账号

sicnan git
1. 设置用户邮箱和姓名
git config user.name "alimlong"
git config user.email "alimlong@scinan.com"

2. git自动加上change-id 
gitdir=$(git rev-parse --git-dir);scp -p -P 29418 alimlong@10.1.10.62:hooks/commit-msg ${gitdir}/hooks/

3. git add
git add .       提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件
git add -u    提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)
git add -A    提交所有变化

4. git commit -m ""

5. git comit --amend

6. 提交到服务器
git push origin master
git push origin HEAD:refs/for/master 

分支
1. git branch   //查看本地分支
2. git branch -a   //查看所有分支
3. git branch -r   //查看远程分支
4. git checkout xxx  //切换分支
5. git push origin xxx  //提交到指定分支
6. git merge xxx    //合并xxx到当前分支

7. 查看远程仓库日志
git log origin/master -n 3
